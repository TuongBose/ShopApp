server:
  port: 8080

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/shopapp}
    username: root
    password: ${MYSQL_ROOT_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none  # khong de java tự động tạo bảng, cot, v.v (thay vào đó, sử dụng các cau lenh SQL để tạo bang, cot, v.v)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  redis:
    host: ${REDIS_HOST:localhost} # Default to 'localhost' if not provided
    port: ${REDIS_PORT:6379}
  messages:
    basename: i18n/messages
    encoding: UTF-8
    default-locale: en

api:
  prefix: /api/v1

jwt:
  expiration: 2592000 #30 days = 30 * 24 * 60 * 60
  secretKey: k91v0UiqsELb5S9c14/gtKvcs/gxCnD8CBXJHj41WlE=

########################################################################################################
#  Tạo secretKey này:                                                                                  #
#    - Mở Git Bash nhập                                                                                #
#                       "openssl rand -base64 32"                                                      #
#      enter, hệ thống sẽ tự random tạo cho mình một cái                                               #
########################################################################################################
#    - Chuyển 1 chuổi mã hóa theo Base64, ví dụ muốn chuyển chuỗi "ihaveadream" => Base64:             #
#    - Mở Git Bash nhập                                                                                #
#                       "echo -n "ihaveadream" | base64"                                               #
#        (Không xử dụng cách này vì có thể chuỗi không đủ độ dài >= 32 bytes tức là 256-bit trở lên)   #
########################################################################################################

logging:
  level:
    org:
      springframework.security: DEBUG

# swagger-ui custom path
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs
  show-actuator: true

# health check
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /api/v1/actuator
      exposure:
        include: "health, info"